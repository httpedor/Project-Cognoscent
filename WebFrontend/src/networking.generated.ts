/* Auto-generated by PacketTsGen. Do not edit. */
/* Source: Rpg assembly - packets and enums */

export enum ProtocolId {
  HANDSHAKE = 0,
  DISCONNECT = 1,
  CHAT = 2,
  BOARD_ADD = 3,
  BOARD_REMOVE = 4,
  FLOOR_IMAGE = 5,
  DOOR_UPDATE = 6,
  DOOR_INTERACT = 7,
  COMBAT_MODE = 8,
  ENTITY_CREATE = 9,
  ENTITY_MIDIA = 10,
  ENTITY_REMOVE = 11,
  ENTITY_MOVE = 12,
  ENTITY_POSITION = 13,
  ENTITY_ROTATION = 14,
  ENTITY_VELOCITY = 15,
  ENTITY_BODY_PART = 16,
  ENTITY_BODY_PART_INJURY = 17,
  ENTITY_STAT_CREATE = 18,
  ENTITY_STAT_BASE = 19,
  ENTITY_STAT_MODIFIER_UPDATE = 20,
  ENTITY_STAT_MODIFIER_REMOVE = 21,
  FEATURE_UPDATE = 22,
  CREATURE_EQUIP_ITEM = 23,
  CREATURE_SKILL_UPDATE = 24,
  CREATURE_SKILL_REMOVE = 25,
  CREATURE_ACTION_LAYER_UPDATE = 26,
  CREATURE_ACTION_LAYER_REMOVE = 27,
  CREATURE_SKILLTREE_UPDATE = 28,
  EXECUTE_COMMAND = 29,
  COMPENDIUM_UPDATE = 30,
  SHOW_MIDIA = 31,
}

export enum DeviceType {
  DESKTOP = 0,
  MOBILE = 1,
}

export enum StatValueType {
  Base = 0,
  Min = 1,
  Max = 2,
}

export enum FeatureUpdateType {
  ENABLE = 0,
  DISABLE = 1,
  ADD = 2,
  REMOVE = 3,
}

export enum StatModifierType {
  Flat = 0,
  FlatPostMods = 1,
  Percent = 2,
  Multiplier = 3,
  Capmax = 4,
  Capmin = 5,
  OverrideBase = 6,
  OverrideFinal = 7,
}

export enum MidiaType {
  Image = 0,
  Video = 1,
  Audio = 2,
  Binary = 3,
}

export interface StatModifier {
  id: string;
  value: number;
  type: StatModifierType;
}

export interface EntityRef {
  board: string;
  id: number;
  entity: unknown;
}

export interface CreatureRef {
  board: string;
  id: number;
  creature: unknown;
}

export interface Midia {
  bytes: number[];
  type: MidiaType;
  scale: Vector2;
  base64: string;
}

export interface Vector2 {
  x: number;
  y: number;
  item: number;
}

export interface Vector3 {
  x: number;
  y: number;
  z: number;
  item: number;
}

export interface ActionLayerRemovePacket {
  creatureRef: CreatureRef;
  layerId: string;
  id: ProtocolId;
}

export interface ActionLayerUpdatePacket {
  creatureRef: CreatureRef;
  layer: unknown;
  id: ProtocolId;
}

export interface BoardAddPacket {
  board: unknown;
  id: ProtocolId;
}

export interface BoardRemovePacket {
  name: string;
  id: ProtocolId;
}

export interface ChatPacket {
  message: string;
  boardName: string;
  id: ProtocolId;
}

export interface CombatModePacket {
  boardName: string;
  combatMode: boolean;
  tick: number;
  pauseAt: number;
  id: ProtocolId;
}

export interface CompendiumUpdatePacket {
  remove: boolean;
  registryName: string;
  dataName: string;
  json: unknown;
  id: ProtocolId;
}

export interface CreatureEquipItemPacket {
  bPRef: unknown;
  slot: string;
  itemRef: unknown;
  equipped: boolean;
  id: ProtocolId;
}

export interface CreatureSkillRemovePacket {
  creatureRef: CreatureRef;
  skillId: number;
  id: ProtocolId;
}

export interface CreatureSkillUpdatePacket {
  creatureRef: CreatureRef;
  data: unknown;
  id: ProtocolId;
}

export interface DisconnectPacket {
  id: ProtocolId;
}

export interface DoorInteractPacket {
  door: unknown;
  id: ProtocolId;
}

export interface DoorUpdatePacket {
  door: unknown;
  ref: unknown;
  id: ProtocolId;
}

export interface EntityBodyPartInjuryPacket {
  creatureRef: CreatureRef;
  path: string;
  injury: unknown;
  remove: boolean;
  id: ProtocolId;
}

export interface EntityBodyPartPacket {
  creatureRef: CreatureRef;
  path: string;
  part: unknown;
  id: ProtocolId;
}

export interface EntityCreatePacket {
  boardName: string;
  entity: unknown;
  id: ProtocolId;
}

export interface EntityMidiaPacket {
  ref: EntityRef;
  midia: Midia;
  id: ProtocolId;
}

export interface EntityMovePacket {
  entityRef: EntityRef;
  position: Vector2;
  id: ProtocolId;
}

export interface EntityPositionPacket {
  entityRef: EntityRef;
  position: Vector3;
  id: ProtocolId;
}

export interface EntityRemovePacket {
  ref: EntityRef;
  id: ProtocolId;
}

export interface EntityRotationPacket {
  entityRef: EntityRef;
  rotation: number;
  id: ProtocolId;
}

export interface EntityStatBasePacket {
  entityRef: EntityRef;
  statId: string;
  value: number;
  valueType: StatValueType;
  id: ProtocolId;
}

export interface EntityStatCreatePacket {
  entityRef: EntityRef;
  stat: unknown;
  id: ProtocolId;
}

export interface EntityStatModifierPacket {
  entityRef: EntityRef;
  statId: string;
  modifier: StatModifier;
  id: ProtocolId;
}

export interface EntityStatModifierRemovePacket {
  entityRef: EntityRef;
  statId: string;
  modifierId: string;
  id: ProtocolId;
}

export interface ExecuteCommandPacket {
  commands: string[];
  id: ProtocolId;
}

export interface FeatureUpdatePacket {
  updateType: FeatureUpdateType;
  sourceRef: unknown;
  featureId: string;
  feature: unknown;
  id: ProtocolId;
}

export interface FloorImagePacket {
  boardName: string;
  floorIndex: number;
  data: Midia;
  id: ProtocolId;
}

export interface LoginPacket {
  username: string;
  device: DeviceType;
  id: ProtocolId;
}

export interface ShowMidiaPacket {
  board: unknown;
  midia: Midia;
  id: ProtocolId;
}

export interface SkillTreeUpdatePacket {
  entryRef: unknown;
  enabled: boolean;
  id: ProtocolId;
}

export type Packet = ActionLayerRemovePacket | ActionLayerUpdatePacket | BoardAddPacket | BoardRemovePacket | ChatPacket | CombatModePacket | CompendiumUpdatePacket | CreatureEquipItemPacket | CreatureSkillRemovePacket | CreatureSkillUpdatePacket | DisconnectPacket | DoorInteractPacket | DoorUpdatePacket | EntityBodyPartInjuryPacket | EntityBodyPartPacket | EntityCreatePacket | EntityMidiaPacket | EntityMovePacket | EntityPositionPacket | EntityRemovePacket | EntityRotationPacket | EntityStatBasePacket | EntityStatCreatePacket | EntityStatModifierPacket | EntityStatModifierRemovePacket | ExecuteCommandPacket | FeatureUpdatePacket | FloorImagePacket | LoginPacket | ShowMidiaPacket | SkillTreeUpdatePacket;

