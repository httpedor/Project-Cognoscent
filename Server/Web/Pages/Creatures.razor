@page "/creatures"
@rendermode InteractiveWebAssembly
@using Rpg
@using Server.Game
@using Microsoft.AspNetCore.Components

<h1>Your Creatures</h1>

@if (string.IsNullOrWhiteSpace(username))
{
    <p>No username provided. <a href="/">Go back</a></p>
}
else
{
    <p>Showing creatures for <strong>@username</strong>. <a href="/">Change</a></p>

    @if (myCreatures.Count == 0)
    {
        <p>No creatures found for this username.</p>
    }
    else
    {
        <div style="display:flex; flex-wrap:wrap; gap:0.5rem;">
            @foreach (var entry in myCreatures)
            {
                <button @onclick="() => SelectCreature(entry.creature)" title="Board: @entry.board.Name">@entry.creature.Name (@entry.board.Name)</button>
            }
        </div>

        @if (selected is not null)
        {
            <div style="margin-top:1rem; padding:0.5rem; border:1px solid #ccc; border-radius:6px;">
                <h4>Selected: @selected!.Name</h4>
                <p>HP: @selected!.Health / @selected!.MaxHealth</p>
            </div>
        }
    }
}

@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public string? username { get; set; }

    private List<(Rpg.Board board, Creature creature)> myCreatures = new();
    private Creature? selected;
    private bool loadedOnServer = false;

    protected override void OnParametersSet()
    {
        // Load initial data on the server during prerender.
        // InteractiveAuto will switch to client-side WebAssembly for events later.
        if (!loadedOnServer)
        {
            myCreatures.Clear();
            selected = null;

            if (!string.IsNullOrWhiteSpace(username))
            {
                foreach (var board in Game.GetBoards())
                {
                    try
                    {
                        var owned = board.GetCreaturesByOwner(username);
                        foreach (var c in owned)
                        {
                            myCreatures.Add((board, c));
                        }
                    }
                    catch
                    {
                        // Ignore individual board failures to keep page resilient
                    }
                }
            }

            loadedOnServer = true;
        }
    }

    private void SelectCreature(Creature creature)
    {
        selected = creature;
        Console.WriteLine("Selected creature: " + creature.Name);
    }
}
